# Include any additional configuration file(s)
# [include] sections are processed in the order you write them
# Files in $CONFIG_DIR/topgrade.d/ are automatically included before this file
[include]
# paths = ["/etc/topgrade.toml"]


[misc]
# Run `sudo -v` to cache credentials at the start of the run
# This avoids a blocking password prompt in the middle of an unattended run
# (default: false)
pre_sudo = true

# Sudo command to be used
# sudo_command = "sudo -vT 0"

# Disable specific steps - same options as the command line flag
# disable = ["system", "emacs"]

# Ignore failures for these steps
# ignore_failures = ["powershell"]

# List of remote machines with Topgrade installed on them
# remote_topgrades = ["toothless", "pi", "parnas"]

# Path to Topgrade executable on remote machines
# remote_topgrade_path = ".cargo/bin/topgrade"

# Arguments to pass to SSH when upgrading remote systems
# ssh_arguments = "-o ConnectTimeout=2"

# Do not set the terminal title (default: true)
set_title = false

# Display the time in step titles (default: true)
display_time = true

# Don't ask for confirmations (no default value)
assume_yes = true

# Do not ask to retry failed steps (default: false)
no_retry = true

# Cleanup temporary or old files (default: false)
cleanup = true

# Send a notification for every step (default: false)
notify_each_step = true

# Skip sending a notification at the end of a run (default: false)
# skip_notify = true

# Run specific steps - same options as the command line flag
# only = ["system", "emacs"]

# Extra tracing filter directives
# These are prepended to the `--log-filter` argument
# See: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/filter/struct.EnvFilter.html#directives
# log_filters = ["topgrade::command=debug", "warn"]


# Commands to run before anything
[pre_commands]


# Commands to run after anything
[post_commands]


# Custom commands
[commands]
"Remove Unused" = "yay -Yc --noconfirm"
"Lazy Plugins" = "nvim --headless '+Lazy! sync' +qa"
"Mason LSPs" = "nvim +MasonUpdate +qa"
"Treesitter Parsers" = "nvim +TSUpdateSync +qa"
"Theme Switcher" = "~/theme.sh"


[python]
enable_pip_review = true                         ###disabled by default
enable_pip_review_local = true                   ###disabled by default

[brew]
greedy_cask = true
autoremove = true


[linux]
# Arch Package Manager to use.
# Allowed values:
#   autodetect, aura, garuda_update, pacman, pamac, paru, pikaur, trizen, yay
arch_package_manager = "autodetect"

# Arguments to pass yay (or paru) when updating packages
yay_arguments = "--devel"
show_arch_news = true

[git]
# How many repos to pull at max in parallel
max_concurrency = 10

# Additional git repositories to pull
repos = [
	"~/dotfiles",
	"~/homework/crcproject",
	# "~/dotfiles/nvim",
	# "~/homework",
]

# Don't pull the predefined git repos
# pull_predefined = false

# Arguments to pass Git when pulling Repositories
arguments = "--rebase --autostash"

[firmware]
# Offer to update firmware; if false just check for and display available updates
upgrade = true
